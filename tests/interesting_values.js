// partially generated list, some values are indistinguishable, but at least several hundrends are
export const interesting_values = [
	"module",
	"(function() { return arguments })()",
	"(function() { return arguments })(1)",
	"NaN",
	"null",
	"undefined",
	"true",
	"false",
	"\"\"",
	"\"0\"",
	"\"1\"",
	"\"str\"",
	"\"NaN\"",
	"\"   \"",
	"[]",
	"[0]",
	"[1]",
	"new Array(2)",
	"[,1]",
	"Symbol()",
	"Symbol(\"\")",
	"Symbol(\"str\")",
	"Symbol.for(\"symbol\")",
	"Symbol.iterator",
	"/a/",
	"/a/g",
	"/a/gi",
	"/(?:)/",
	"Promise.resolve()",
	"Function(\"x\", \"return x\")",
	"Function(\"\")",
	"function   (x) {}",
	"function fn(x) {}",
	"function   () {}",
	"function fn() {}",
	"function   () {}.bind(null)",
	"function fn() {}.bind(null)",
	"function   () {}.bind({a:1})",
	"function fn() {}.bind({a:1})",
	"function   () { this.x = 1 }",
	"function fn() { this.x = 1 }",
	"(new class A { fn() {} }).fn",
	"() => {}",
	"fn = () => {}",
	"x => {}",
	"GeneratorFunction(\"x\", \"yield x\")",
	"GeneratorFunction(\"\")",
	"(() => function*(){})()",
	"function* fn(x) {}",
	"function* fn() {}",
	"function* fn() {}.bind(null)",
	"function* fn() {}.bind({a:1})",
	"function* fn() { this.x = 1 }",
	"(new class A { *fn() {} }).fn",
	"AsyncFunction(\"x\", \"await x\")",
	"AsyncFunction(\"\")",
	"async function   (x) { await x }",
	"async function fn(x) { await x }",
	"async function   () {}",
	"async function fn() {}",
	"async function   () {}.bind(null)",
	"async function fn() {}.bind(null)",
	"async function   () {}.bind({a:1})",
	"async function fn() {}.bind({a:1})",
	"async function   () { this.x = 1 }",
	"async function fn() { this.x = 1 }",
	"(new class A { async fn() {} }).fn",
	"async () => {}",
	"fn = async () => {}",
	"async x => {}",
	"AsyncGeneratorFunction(\"x\", \"await x\")",
	"AsyncGeneratorFunction(\"\")",
	"async function*   (x) { await x }",
	"async function* fn(x) { await x }",
	"async function*   () {}",
	"async function* fn() {}",
	"async function*   () {}.bind(null)",
	"async function* fn() {}.bind(null)",
	"async function*   () {}.bind({a:1})",
	"async function* fn() {}.bind({a:1})",
	"async function*   () { this.x = 1 }",
	"async function* fn() { this.x = 1 }",
	"(new class A { async *fn() {} }).fn",
	"class {}",
	"class { fn() {} }",
	"class A {}",
	"class A { fn() {} }",
	"class B extends (class A { fn() {} }) { fn() {} }",
	"-Infinity",
	"-Number.MAX_VALUE-1",
	"-Number.MAX_VALUE",
	"-Number.MAX_VALUE+1",
	"Number.MIN_SAFE_INTEGER-1",
	"Number.MIN_SAFE_INTEGER",
	"Number.MIN_SAFE_INTEGER+1",
	"-1",
	"-0.1",
	"-Number.EPSILON",
	"-Number.MIN_VALUE",
	"-0",
	"0",
	"+0",
	"+Number.MIN_VALUE",
	"+Number.EPSILON",
	"+0.1",
	"+1",
	"+1.0",
	"1",
	"Number.MAX_SAFE_INTEGER-1",
	"+Number.MAX_SAFE_INTEGER",
	"Number.MAX_SAFE_INTEGER+1",
	"Number.MAX_VALUE-1",
	"+Number.MAX_VALUE",
	"Number.MAX_VALUE+1",
	"+Infinity",
	"BigInt(-Number.MAX_VALUE-1)",
	"BigInt(-Number.MAX_VALUE)",
	"BigInt(-Number.MAX_VALUE+1)",
	"BigInt(Number.MIN_SAFE_INTEGER-1)",
	"BigInt(Number.MIN_SAFE_INTEGER)",
	"BigInt(Number.MIN_SAFE_INTEGER+1)",
	"BigInt(-1)",
	"BigInt(-0)",
	"BigInt(0)",
	"BigInt(+0)",
	"BigInt(+1)",
	"BigInt(+1.0)",
	"BigInt(1)",
	"BigInt(Number.MAX_SAFE_INTEGER-1)",
	"BigInt(+Number.MAX_SAFE_INTEGER)",
	"BigInt(Number.MAX_SAFE_INTEGER+1)",
	"BigInt(Number.MAX_VALUE-1)",
	"BigInt(+Number.MAX_VALUE)",
	"BigInt(Number.MAX_VALUE+1)",
	"-1n",
	"-0n",
	"0n",
	"1n",
	"JSON",
	"Math",
	"Atomics",
	"WebAssembly",
	"Intl",
	"Reflect",
	"AggregateError",
	"Proxy",
	"DataView",
	"WeakRef",
	"FinalizationRegistry",
	"Promise",
	"Intl.Locale",
	"Intl.DisplayNames",
	"WebAssembly.Module",
	"WebAssembly.Instance",
	"WebAssembly.Memory",
	"WebAssembly.Table",
	"File",
	"new AggregateError(\"\")",
	"new Proxy({}, {})",
	"new DataView(new ArrayBuffer())",
	"new WeakRef({})",
	"new FinalizationRegistry(()=>{})",
	"new Promise(() => {})",
	"new Intl.Locale(\"en-US\")",
	"new Intl.DisplayNames([], {type: \"language\"})",
	"new WebAssembly.Memory({initial:1, maximum:1})",
	"new WebAssembly.Table({initial:1, element:\"anyfunc\"})",
	"new File([\"\"],\"\")",
	"Int8Array",
	"Uint8Array",
	"Uint8ClampedArray",
	"Int16Array",
	"Uint16Array",
	"Int32Array",
	"Uint32Array",
	"Float32Array",
	"Float64Array",
	"BigInt64Array",
	"BigUint64Array",
	"ArrayBuffer",
	"SharedArrayBuffer",
	"Map",
	"Set",
	"WeakMap",
	"WeakSet",
	"Intl.ListFormat",
	"Intl.PluralRules",
	"Intl.RelativeTimeFormat",
	"Blob",
	"Object",
	"Function",
	"Boolean",
	"Number",
	"String",
	"Date",
	"Array",
	"Error",
	"EvalError",
	"RangeError",
	"ReferenceError",
	"SyntaxError",
	"TypeError",
	"URIError",
	"RegExp",
	"GeneratorFunction",
	"AsyncGeneratorFunction",
	"AsyncFunction",
	"Intl.Collator",
	"Intl.DateTimeFormat",
	"Intl.NumberFormat",
	"WebAssembly.CompileError",
	"WebAssembly.LinkError",
	"WebAssembly.RuntimeError",
	"new Int8Array()",
	"new Uint8Array()",
	"new Uint8ClampedArray()",
	"new Int16Array()",
	"new Uint16Array()",
	"new Int32Array()",
	"new Uint32Array()",
	"new Float32Array()",
	"new Float64Array()",
	"new BigInt64Array()",
	"new BigUint64Array()",
	"new ArrayBuffer()",
	"new SharedArrayBuffer()",
	"new Map()",
	"new Set()",
	"new WeakMap()",
	"new WeakSet()",
	"new Intl.ListFormat()",
	"new Intl.PluralRules()",
	"new Intl.RelativeTimeFormat()",
	"new Blob()",
	"new Object()",
	"new Function()",
	"new Boolean()",
	"new Number()",
	"new String()",
	"new Date()",
	"new Array()",
	"new Error()",
	"new EvalError()",
	"new RangeError()",
	"new ReferenceError()",
	"new SyntaxError()",
	"new TypeError()",
	"new URIError()",
	"new RegExp()",
	"new GeneratorFunction()",
	"new AsyncGeneratorFunction()",
	"new AsyncFunction()",
	"new Intl.Collator()",
	"new Intl.DateTimeFormat()",
	"new Intl.NumberFormat()",
	"new WebAssembly.CompileError()",
	"new WebAssembly.LinkError()",
	"new WebAssembly.RuntimeError()",
	"new Int8Array",
	"new Uint8Array",
	"new Uint8ClampedArray",
	"new Int16Array",
	"new Uint16Array",
	"new Int32Array",
	"new Uint32Array",
	"new Float32Array",
	"new Float64Array",
	"new BigInt64Array",
	"new BigUint64Array",
	"new ArrayBuffer",
	"new SharedArrayBuffer",
	"new Map",
	"new Set",
	"new WeakMap",
	"new WeakSet",
	"new Intl.ListFormat",
	"new Intl.PluralRules",
	"new Intl.RelativeTimeFormat",
	"new Blob",
	"new Object",
	"new Function",
	"new Boolean",
	"new Number",
	"new String",
	"new Date",
	"new Array",
	"new Error",
	"new EvalError",
	"new RangeError",
	"new ReferenceError",
	"new SyntaxError",
	"new TypeError",
	"new URIError",
	"new RegExp",
	"new GeneratorFunction",
	"new AsyncGeneratorFunction",
	"new AsyncFunction",
	"new Intl.Collator",
	"new Intl.DateTimeFormat",
	"new Intl.NumberFormat",
	"new WebAssembly.CompileError",
	"new WebAssembly.LinkError",
	"new WebAssembly.RuntimeError",
	"Object()",
	"Function()",
	"Boolean()",
	"Number()",
	"String()",
	"Date()",
	"Array()",
	"Error()",
	"EvalError()",
	"RangeError()",
	"ReferenceError()",
	"SyntaxError()",
	"TypeError()",
	"URIError()",
	"RegExp()",
	"GeneratorFunction()",
	"AsyncGeneratorFunction()",
	"AsyncFunction()",
	"Intl.Collator()",
	"Intl.DateTimeFormat()",
	"Intl.NumberFormat()",
	"WebAssembly.CompileError()",
	"WebAssembly.LinkError()",
	"WebAssembly.RuntimeError()",
	"class ObjectEx extends Object {}",
	"class FunctionEx extends Function {}",
	"class BooleanEx extends Boolean {}",
	"class NumberEx extends Number {}",
	"class StringEx extends String {}",
	"class DateEx extends Date {}",
	"class ArrayEx extends Array {}",
	"class ErrorEx extends Error {}",
	"class EvalErrorEx extends EvalError {}",
	"class RangeErrorEx extends RangeError {}",
	"class ReferenceErrorEx extends ReferenceError {}",
	"class SyntaxErrorEx extends SyntaxError {}",
	"class TypeErrorEx extends TypeError {}",
	"class URIErrorEx extends URIError {}",
	"class RegExpEx extends RegExp {}",
	"class GeneratorFunctionEx extends GeneratorFunction {}",
	"class AsyncGeneratorFunctionEx extends AsyncGeneratorFunction {}",
	"class AsyncFunctionEx extends AsyncFunction {}",
	"class Intl_CollatorEx extends Intl.Collator {}",
	"class Intl_DateTimeFormatEx extends Intl.DateTimeFormat {}",
	"class Intl_NumberFormatEx extends Intl.NumberFormat {}",
	"class WebAssembly_CompileErrorEx extends WebAssembly.CompileError {}",
	"class WebAssembly_LinkErrorEx extends WebAssembly.LinkError {}",
	"class WebAssembly_RuntimeErrorEx extends WebAssembly.RuntimeError {}",
	"class Int8ArrayEx extends Int8Array {}",
	"class Uint8ArrayEx extends Uint8Array {}",
	"class Uint8ClampedArrayEx extends Uint8ClampedArray {}",
	"class Int16ArrayEx extends Int16Array {}",
	"class Uint16ArrayEx extends Uint16Array {}",
	"class Int32ArrayEx extends Int32Array {}",
	"class Uint32ArrayEx extends Uint32Array {}",
	"class Float32ArrayEx extends Float32Array {}",
	"class Float64ArrayEx extends Float64Array {}",
	"class BigInt64ArrayEx extends BigInt64Array {}",
	"class BigUint64ArrayEx extends BigUint64Array {}",
	"class ArrayBufferEx extends ArrayBuffer {}",
	"class SharedArrayBufferEx extends SharedArrayBuffer {}",
	"class MapEx extends Map {}",
	"class SetEx extends Set {}",
	"class WeakMapEx extends WeakMap {}",
	"class WeakSetEx extends WeakSet {}",
	"class Intl_ListFormatEx extends Intl.ListFormat {}",
	"class Intl_PluralRulesEx extends Intl.PluralRules {}",
	"class Intl_RelativeTimeFormatEx extends Intl.RelativeTimeFormat {}",
	"class BlobEx extends Blob {}",
	"class extends Object {}",
	"class extends Function {}",
	"class extends Boolean {}",
	"class extends Number {}",
	"class extends String {}",
	"class extends Date {}",
	"class extends Array {}",
	"class extends Error {}",
	"class extends EvalError {}",
	"class extends RangeError {}",
	"class extends ReferenceError {}",
	"class extends SyntaxError {}",
	"class extends TypeError {}",
	"class extends URIError {}",
	"class extends RegExp {}",
	"class extends GeneratorFunction {}",
	"class extends AsyncGeneratorFunction {}",
	"class extends AsyncFunction {}",
	"class extends Intl.Collator {}",
	"class extends Intl.DateTimeFormat {}",
	"class extends Intl.NumberFormat {}",
	"class extends WebAssembly.CompileError {}",
	"class extends WebAssembly.LinkError {}",
	"class extends WebAssembly.RuntimeError {}",
	"class extends Int8Array {}",
	"class extends Uint8Array {}",
	"class extends Uint8ClampedArray {}",
	"class extends Int16Array {}",
	"class extends Uint16Array {}",
	"class extends Int32Array {}",
	"class extends Uint32Array {}",
	"class extends Float32Array {}",
	"class extends Float64Array {}",
	"class extends BigInt64Array {}",
	"class extends BigUint64Array {}",
	"class extends ArrayBuffer {}",
	"class extends SharedArrayBuffer {}",
	"class extends Map {}",
	"class extends Set {}",
	"class extends WeakMap {}",
	"class extends WeakSet {}",
	"class extends Intl.ListFormat {}",
	"class extends Intl.PluralRules {}",
	"class extends Intl.RelativeTimeFormat {}",
	"class extends Blob {}",
	"new (class ObjectEx extends Object {})()",
	"new (class FunctionEx extends Function {})()",
	"new (class BooleanEx extends Boolean {})()",
	"new (class NumberEx extends Number {})()",
	"new (class StringEx extends String {})()",
	"new (class DateEx extends Date {})()",
	"new (class ArrayEx extends Array {})()",
	"new (class ErrorEx extends Error {})()",
	"new (class EvalErrorEx extends EvalError {})()",
	"new (class RangeErrorEx extends RangeError {})()",
	"new (class ReferenceErrorEx extends ReferenceError {})()",
	"new (class SyntaxErrorEx extends SyntaxError {})()",
	"new (class TypeErrorEx extends TypeError {})()",
	"new (class URIErrorEx extends URIError {})()",
	"new (class RegExpEx extends RegExp {})()",
	"new (class GeneratorFunctionEx extends GeneratorFunction {})()",
	"new (class AsyncGeneratorFunctionEx extends AsyncGeneratorFunction {})()",
	"new (class AsyncFunctionEx extends AsyncFunction {})()",
	"new (class Intl_CollatorEx extends Intl.Collator {})()",
	"new (class Intl_DateTimeFormatEx extends Intl.DateTimeFormat {})()",
	"new (class Intl_NumberFormatEx extends Intl.NumberFormat {})()",
	"new (class WebAssembly_CompileErrorEx extends WebAssembly.CompileError {})()",
	"new (class WebAssembly_LinkErrorEx extends WebAssembly.LinkError {})()",
	"new (class WebAssembly_RuntimeErrorEx extends WebAssembly.RuntimeError {})()",
	"new (class Int8ArrayEx extends Int8Array {})()",
	"new (class Uint8ArrayEx extends Uint8Array {})()",
	"new (class Uint8ClampedArrayEx extends Uint8ClampedArray {})()",
	"new (class Int16ArrayEx extends Int16Array {})()",
	"new (class Uint16ArrayEx extends Uint16Array {})()",
	"new (class Int32ArrayEx extends Int32Array {})()",
	"new (class Uint32ArrayEx extends Uint32Array {})()",
	"new (class Float32ArrayEx extends Float32Array {})()",
	"new (class Float64ArrayEx extends Float64Array {})()",
	"new (class BigInt64ArrayEx extends BigInt64Array {})()",
	"new (class BigUint64ArrayEx extends BigUint64Array {})()",
	"new (class ArrayBufferEx extends ArrayBuffer {})()",
	"new (class SharedArrayBufferEx extends SharedArrayBuffer {})()",
	"new (class MapEx extends Map {})()",
	"new (class SetEx extends Set {})()",
	"new (class WeakMapEx extends WeakMap {})()",
	"new (class WeakSetEx extends WeakSet {})()",
	"new (class Intl_ListFormatEx extends Intl.ListFormat {})()",
	"new (class Intl_PluralRulesEx extends Intl.PluralRules {})()",
	"new (class Intl_RelativeTimeFormatEx extends Intl.RelativeTimeFormat {})()",
	"new (class BlobEx extends Blob {})()",
	"new (class extends Object {})()",
	"new (class extends Function {})()",
	"new (class extends Boolean {})()",
	"new (class extends Number {})()",
	"new (class extends String {})()",
	"new (class extends Date {})()",
	"new (class extends Array {})()",
	"new (class extends Error {})()",
	"new (class extends EvalError {})()",
	"new (class extends RangeError {})()",
	"new (class extends ReferenceError {})()",
	"new (class extends SyntaxError {})()",
	"new (class extends TypeError {})()",
	"new (class extends URIError {})()",
	"new (class extends RegExp {})()",
	"new (class extends GeneratorFunction {})()",
	"new (class extends AsyncGeneratorFunction {})()",
	"new (class extends AsyncFunction {})()",
	"new (class extends Intl.Collator {})()",
	"new (class extends Intl.DateTimeFormat {})()",
	"new (class extends Intl.NumberFormat {})()",
	"new (class extends WebAssembly.CompileError {})()",
	"new (class extends WebAssembly.LinkError {})()",
	"new (class extends WebAssembly.RuntimeError {})()",
	"new (class extends Int8Array {})()",
	"new (class extends Uint8Array {})()",
	"new (class extends Uint8ClampedArray {})()",
	"new (class extends Int16Array {})()",
	"new (class extends Uint16Array {})()",
	"new (class extends Int32Array {})()",
	"new (class extends Uint32Array {})()",
	"new (class extends Float32Array {})()",
	"new (class extends Float64Array {})()",
	"new (class extends BigInt64Array {})()",
	"new (class extends BigUint64Array {})()",
	"new (class extends ArrayBuffer {})()",
	"new (class extends SharedArrayBuffer {})()",
	"new (class extends Map {})()",
	"new (class extends Set {})()",
	"new (class extends WeakMap {})()",
	"new (class extends WeakSet {})()",
	"new (class extends Intl.ListFormat {})()",
	"new (class extends Intl.PluralRules {})()",
	"new (class extends Intl.RelativeTimeFormat {})()",
	"new (class extends Blob {})()",
	"class AggregateErrorEx extends AggregateError {}",
	"class DataViewEx extends DataView {}",
	"class WeakRefEx extends WeakRef {}",
	"class FinalizationRegistryEx extends FinalizationRegistry {}",
	"class PromiseEx extends Promise {}",
	"class Intl_LocaleEx extends Intl.Locale {}",
	"class Intl_DisplayNamesEx extends Intl.DisplayNames {}",
	"class WebAssembly_ModuleEx extends WebAssembly.Module {}",
	"class WebAssembly_InstanceEx extends WebAssembly.Instance {}",
	"class WebAssembly_MemoryEx extends WebAssembly.Memory {}",
	"class WebAssembly_TableEx extends WebAssembly.Table {}",
	"class FileEx extends File {}",
	"class extends AggregateError {}",
	"class extends DataView {}",
	"class extends WeakRef {}",
	"class extends FinalizationRegistry {}",
	"class extends Promise {}",
	"class extends Intl.Locale {}",
	"class extends Intl.DisplayNames {}",
	"class extends WebAssembly.Module {}",
	"class extends WebAssembly.Instance {}",
	"class extends WebAssembly.Memory {}",
	"class extends WebAssembly.Table {}",
	"class extends File {}",
	"new (class AggregateErrorEx extends AggregateError {})(\"\")",
	"new (class DataViewEx extends DataView {})(new ArrayBuffer())",
	"new (class WeakRefEx extends WeakRef {})({})",
	"new (class FinalizationRegistryEx extends FinalizationRegistry {})(()=>{})",
	"new (class PromiseEx extends Promise {})(() => {})",
	"new (class Intl_LocaleEx extends Intl.Locale {})(\"en-US\")",
	"new (class Intl_DisplayNamesEx extends Intl.DisplayNames {})([], {type: \"language\"})",
	"new (class WebAssembly_MemoryEx extends WebAssembly.Memory {})({initial:1, maximum:1})",
	"new (class WebAssembly_TableEx extends WebAssembly.Table {})({initial:1, element:\"anyfunc\"})",
	"new (class FileEx extends File {})([\"\"],\"\")",
	"new (class extends AggregateError {})(\"\")",
	"new (class extends DataView {})(new ArrayBuffer())",
	"new (class extends WeakRef {})({})",
	"new (class extends FinalizationRegistry {})(()=>{})",
	"new (class extends Promise {})(() => {})",
	"new (class extends Intl.Locale {})(\"en-US\")",
	"new (class extends Intl.DisplayNames {})([], {type: \"language\"})",
	"new (class extends WebAssembly.Memory {})({initial:1, maximum:1})",
	"new (class extends WebAssembly.Table {})({initial:1, element:\"anyfunc\"})",
	"new (class extends File {})([\"\"],\"\")",
	"Worker",
	"class WorkerEx extends Worker {}",
	"class extends Worker {}",
	"(() => { const v = new Worker(\"worker_value.js\"); v.terminate(); return v })()",
	"(() => { const v = new (class WorkerEx extends Worker {})(\"worker_value.js\"); v.terminate(); return v })()",
	"(() => { const v = new (class extends Worker {})(\"worker_value.js\"); v.terminate(); return v })()",
	"Symbol",
	"BigInt",
	"Generator",
	"AsyncGenerator",
	"new String(null)",
	"new String(undefined)",
	"new String(true)",
	"new String(false)",
	"new String(\"\")",
	"new String(\"0\")",
	"new String(\"1\")",
	"new String(\"str\")",
	"new String(\"NaN\")",
	"new String(\"   \")",
	"new String([])",
	"new String([0])",
	"new String([1])",
	"new String(new Array(2))",
	"new String(/a/)",
	"String(null)",
	"String(undefined)",
	"String(true)",
	"String(false)",
	"String(\"\")",
	"String(\"0\")",
	"String(\"1\")",
	"String(\"str\")",
	"String(\"NaN\")",
	"String(\"   \")",
	"String([])",
	"String([0])",
	"String([1])",
	"String(new Array(2))",
	"String(/a/)",
	"new Set([1])",
	"new Map([[1,1]])",
	"new Float32Array(1)",
	"new Date(NaN)",
	"Error(\"\")",
	"Error(\"str\")",
	"new Error(\"\")",
	"new Error(\"str\")",
	"RegExp(\"\")",
	"RegExp(\"a\")",
	"RegExp(/a/)",
	"new class {}",
	"new class { fn() {} }",
	"new class A {}",
	"new class A { fn() {} }",
	"new class B extends (class A { fn() {} }) { fn() {} }",
	"{}",
	"{a:1}",
	"Object.create(null)",
	"Object.create(Object.prototype)",
	"Object.create({})",
	"Object.create(Object.create(Object.create({})))",
	"Object.create(Object.create(Object.create([])))",
	"{ length: 1.1 }",
	"{ length: NaN }",
	"{ length: 1 }",
	"{ a: 1, length: 1 }",
	"{ 1: 1, length: 1 }",
	"{ 1: 1, 2: 2, length: 1 }",
	"{ toString: function() { return \"str\" } }",
	"{ toString: function() { return \"NaN\" } }",
	"{ call: function() { return 1 } }",
	"{ get [Symbol.toStringTag]() { return \"Array\" } }",
	"(() => { const v = []; Object.defineProperty(v, Symbol.toStringTag, { get: () => { return \"ha-ha\"} }); return v })()",
	"(function* gen() { yield 1 })()",
	"(async function* a_gen() { yield 1 })()",
	"{ *[Symbol.iterator]() { yield 1 } }",
	"{ async* [Symbol.asyncIterator]() { yield 1 } }",
	"{ then: () => {} }",
	"{ [Symbol.iterator]: function*() { yield 0 }, valueOf: () => 0 }",
	"{ size: 0 }",
	"window",
	"document",
	"document.createElement(\"div\")",
	"document.createElement(\"custom_tag\")",
	"document.createTextNode(\"str\")",
	"document.createTextNode(\"\")",
	"document.querySelectorAll(\"div\")",
	"HTMLElement",
	"window.alert",
	"setTimeout",
	"window.confirm",
	"window.prompt",
	"document.forms",
	"Object(NaN)",
	"Object(null)",
	"Object(undefined)",
	"Object(true)",
	"Object(false)",
	"Object(\"\")",
	"Object(\"0\")",
	"Object(\"1\")",
	"Object(\"str\")",
	"Object(\"NaN\")",
	"Object(\"   \")",
	"Object(Symbol())",
	"Object(Symbol(\"\"))",
	"Object(Symbol(\"str\"))",
	"Object(Symbol.for(\"symbol\"))",
	"Object(Symbol.iterator)",
	"Object(-Infinity)",
	"Object(-Number.MAX_VALUE-1)",
	"Object(-Number.MAX_VALUE)",
	"Object(-Number.MAX_VALUE+1)",
	"Object(Number.MIN_SAFE_INTEGER-1)",
	"Object(Number.MIN_SAFE_INTEGER)",
	"Object(Number.MIN_SAFE_INTEGER+1)",
	"Object(-1)",
	"Object(-0.1)",
	"Object(-Number.EPSILON)",
	"Object(-Number.MIN_VALUE)",
	"Object(-0)",
	"Object(0)",
	"Object(+0)",
	"Object(+Number.MIN_VALUE)",
	"Object(+Number.EPSILON)",
	"Object(+0.1)",
	"Object(+1)",
	"Object(+1.0)",
	"Object(1)",
	"Object(Number.MAX_SAFE_INTEGER-1)",
	"Object(+Number.MAX_SAFE_INTEGER)",
	"Object(Number.MAX_SAFE_INTEGER+1)",
	"Object(Number.MAX_VALUE-1)",
	"Object(+Number.MAX_VALUE)",
	"Object(Number.MAX_VALUE+1)",
	"Object(+Infinity)",
	"Object(BigInt(-Number.MAX_VALUE-1))",
	"Object(BigInt(-Number.MAX_VALUE))",
	"Object(BigInt(-Number.MAX_VALUE+1))",
	"Object(BigInt(Number.MIN_SAFE_INTEGER-1))",
	"Object(BigInt(Number.MIN_SAFE_INTEGER))",
	"Object(BigInt(Number.MIN_SAFE_INTEGER+1))",
	"Object(BigInt(-1))",
	"Object(BigInt(-0))",
	"Object(BigInt(0))",
	"Object(BigInt(+0))",
	"Object(BigInt(+1))",
	"Object(BigInt(+1.0))",
	"Object(BigInt(1))",
	"Object(BigInt(Number.MAX_SAFE_INTEGER-1))",
	"Object(BigInt(+Number.MAX_SAFE_INTEGER))",
	"Object(BigInt(Number.MAX_SAFE_INTEGER+1))",
	"Object(BigInt(Number.MAX_VALUE-1))",
	"Object(BigInt(+Number.MAX_VALUE))",
	"Object(BigInt(Number.MAX_VALUE+1))",
	"Object(-1n)",
	"Object(-0n)",
	"Object(0n)",
	"Object(1n)",
	"Object(Boolean())",
	"Object(Number())",
	"Object(String())",
	"Object(Date())",
	"Object(String(null))",
	"Object(String(undefined))",
	"Object(String(true))",
	"Object(String(false))",
	"Object(String(\"\"))",
	"Object(String(\"0\"))",
	"Object(String(\"1\"))",
	"Object(String(\"str\"))",
	"Object(String(\"NaN\"))",
	"Object(String(\"   \"))",
	"Object(String([]))",
	"Object(String([0]))",
	"Object(String([1]))",
	"Object(String(new Array(2)))",
	"Object(String(/a/))",
	"Object.freeze(Object(NaN))",
	"Object.seal({a:1})",
	"Object.freeze({a:1})",
	"Object.preventExtensions({a:1})",
	"another_realm(`(function() { return arguments })()`)",
	"another_realm(`(function() { return arguments })(1)`)",
	"another_realm(`NaN`)",
	"another_realm(`null`)",
	"another_realm(`true`)",
	"another_realm(`false`)",
	"another_realm(`\"\"`)",
	"another_realm(`\"0\"`)",
	"another_realm(`\"1\"`)",
	"another_realm(`\"str\"`)",
	"another_realm(`\"NaN\"`)",
	"another_realm(`\"   \"`)",
	"another_realm(`[]`)",
	"another_realm(`[0]`)",
	"another_realm(`[1]`)",
	"another_realm(`new Array(2)`)",
	"another_realm(`[,1]`)",
	"another_realm(`Symbol()`)",
	"another_realm(`Symbol(\"\")`)",
	"another_realm(`Symbol(\"str\")`)",
	"another_realm(`Symbol.for(\"symbol\")`)",
	"another_realm(`Symbol.iterator`)",
	"another_realm(`/a/`)",
	"another_realm(`/a/g`)",
	"another_realm(`/a/gi`)",
	"another_realm(`/(?:)/`)",
	"another_realm(`Promise.resolve()`)",
	"another_realm(`Function(\"x\", \"return x\")`)",
	"another_realm(`Function(\"\")`)",
	"another_realm(`function   (x) {}`)",
	"another_realm(`function fn(x) {}`)",
	"another_realm(`function   () {}`)",
	"another_realm(`function fn() {}`)",
	"another_realm(`function   () {}.bind(null)`)",
	"another_realm(`function fn() {}.bind(null)`)",
	"another_realm(`function   () {}.bind({a:1})`)",
	"another_realm(`function fn() {}.bind({a:1})`)",
	"another_realm(`function   () { this.x = 1 }`)",
	"another_realm(`function fn() { this.x = 1 }`)",
	"another_realm(`(new class A { fn() {} }).fn`)",
	"another_realm(`() => {}`)",
	"another_realm(`fn = () => {}`)",
	"another_realm(`x => {}`)",
	"another_realm(`GeneratorFunction(\"x\", \"yield x\")`)",
	"another_realm(`GeneratorFunction(\"\")`)",
	"another_realm(`(() => function*(){})()`)",
	"another_realm(`function* fn(x) {}`)",
	"another_realm(`function* fn() {}`)",
	"another_realm(`function* fn() {}.bind(null)`)",
	"another_realm(`function* fn() {}.bind({a:1})`)",
	"another_realm(`function* fn() { this.x = 1 }`)",
	"another_realm(`(new class A { *fn() {} }).fn`)",
	"another_realm(`AsyncFunction(\"x\", \"await x\")`)",
	"another_realm(`AsyncFunction(\"\")`)",
	"another_realm(`async function   (x) { await x }`)",
	"another_realm(`async function fn(x) { await x }`)",
	"another_realm(`async function   () {}`)",
	"another_realm(`async function fn() {}`)",
	"another_realm(`async function   () {}.bind(null)`)",
	"another_realm(`async function fn() {}.bind(null)`)",
	"another_realm(`async function   () {}.bind({a:1})`)",
	"another_realm(`async function fn() {}.bind({a:1})`)",
	"another_realm(`async function   () { this.x = 1 }`)",
	"another_realm(`async function fn() { this.x = 1 }`)",
	"another_realm(`(new class A { async fn() {} }).fn`)",
	"another_realm(`async () => {}`)",
	"another_realm(`fn = async () => {}`)",
	"another_realm(`async x => {}`)",
	"another_realm(`AsyncGeneratorFunction(\"x\", \"await x\")`)",
	"another_realm(`AsyncGeneratorFunction(\"\")`)",
	"another_realm(`async function*   (x) { await x }`)",
	"another_realm(`async function* fn(x) { await x }`)",
	"another_realm(`async function*   () {}`)",
	"another_realm(`async function* fn() {}`)",
	"another_realm(`async function*   () {}.bind(null)`)",
	"another_realm(`async function* fn() {}.bind(null)`)",
	"another_realm(`async function*   () {}.bind({a:1})`)",
	"another_realm(`async function* fn() {}.bind({a:1})`)",
	"another_realm(`async function*   () { this.x = 1 }`)",
	"another_realm(`async function* fn() { this.x = 1 }`)",
	"another_realm(`(new class A { async *fn() {} }).fn`)",
	"another_realm(`class {}`)",
	"another_realm(`class { fn() {} }`)",
	"another_realm(`class A {}`)",
	"another_realm(`class A { fn() {} }`)",
	"another_realm(`class B extends (class A { fn() {} }) { fn() {} }`)",
	"another_realm(`-Infinity`)",
	"another_realm(`-Number.MAX_VALUE-1`)",
	"another_realm(`-Number.MAX_VALUE`)",
	"another_realm(`-Number.MAX_VALUE+1`)",
	"another_realm(`Number.MIN_SAFE_INTEGER-1`)",
	"another_realm(`Number.MIN_SAFE_INTEGER`)",
	"another_realm(`Number.MIN_SAFE_INTEGER+1`)",
	"another_realm(`-1`)",
	"another_realm(`-0.1`)",
	"another_realm(`-Number.EPSILON`)",
	"another_realm(`-Number.MIN_VALUE`)",
	"another_realm(`-0`)",
	"another_realm(`0`)",
	"another_realm(`+0`)",
	"another_realm(`+Number.MIN_VALUE`)",
	"another_realm(`+Number.EPSILON`)",
	"another_realm(`+0.1`)",
	"another_realm(`+1`)",
	"another_realm(`+1.0`)",
	"another_realm(`1`)",
	"another_realm(`Number.MAX_SAFE_INTEGER-1`)",
	"another_realm(`+Number.MAX_SAFE_INTEGER`)",
	"another_realm(`Number.MAX_SAFE_INTEGER+1`)",
	"another_realm(`Number.MAX_VALUE-1`)",
	"another_realm(`+Number.MAX_VALUE`)",
	"another_realm(`Number.MAX_VALUE+1`)",
	"another_realm(`+Infinity`)",
	"another_realm(`BigInt(-Number.MAX_VALUE-1)`)",
	"another_realm(`BigInt(-Number.MAX_VALUE)`)",
	"another_realm(`BigInt(-Number.MAX_VALUE+1)`)",
	"another_realm(`BigInt(Number.MIN_SAFE_INTEGER-1)`)",
	"another_realm(`BigInt(Number.MIN_SAFE_INTEGER)`)",
	"another_realm(`BigInt(Number.MIN_SAFE_INTEGER+1)`)",
	"another_realm(`BigInt(-1)`)",
	"another_realm(`BigInt(-0)`)",
	"another_realm(`BigInt(0)`)",
	"another_realm(`BigInt(+0)`)",
	"another_realm(`BigInt(+1)`)",
	"another_realm(`BigInt(+1.0)`)",
	"another_realm(`BigInt(1)`)",
	"another_realm(`BigInt(Number.MAX_SAFE_INTEGER-1)`)",
	"another_realm(`BigInt(+Number.MAX_SAFE_INTEGER)`)",
	"another_realm(`BigInt(Number.MAX_SAFE_INTEGER+1)`)",
	"another_realm(`BigInt(Number.MAX_VALUE-1)`)",
	"another_realm(`BigInt(+Number.MAX_VALUE)`)",
	"another_realm(`BigInt(Number.MAX_VALUE+1)`)",
	"another_realm(`-1n`)",
	"another_realm(`-0n`)",
	"another_realm(`0n`)",
	"another_realm(`1n`)",
	"another_realm(`JSON`)",
	"another_realm(`Math`)",
	"another_realm(`Atomics`)",
	"another_realm(`WebAssembly`)",
	"another_realm(`Intl`)",
	"another_realm(`Reflect`)",
	"another_realm(`AggregateError`)",
	"another_realm(`Proxy`)",
	"another_realm(`DataView`)",
	"another_realm(`WeakRef`)",
	"another_realm(`FinalizationRegistry`)",
	"another_realm(`Promise`)",
	"another_realm(`Intl.Locale`)",
	"another_realm(`Intl.DisplayNames`)",
	"another_realm(`WebAssembly.Module`)",
	"another_realm(`WebAssembly.Instance`)",
	"another_realm(`WebAssembly.Memory`)",
	"another_realm(`WebAssembly.Table`)",
	"another_realm(`File`)",
	"another_realm(`new AggregateError(\"\")`)",
	"another_realm(`new Proxy({}, {})`)",
	"another_realm(`new DataView(new ArrayBuffer())`)",
	"another_realm(`new WeakRef({})`)",
	"another_realm(`new FinalizationRegistry(()=>{})`)",
	"another_realm(`new Promise(() => {})`)",
	"another_realm(`new Intl.Locale(\"en-US\")`)",
	"another_realm(`new Intl.DisplayNames([], {type: \"language\"})`)",
	"another_realm(`new WebAssembly.Memory({initial:1, maximum:1})`)",
	"another_realm(`new WebAssembly.Table({initial:1, element:\"anyfunc\"})`)",
	"another_realm(`new File([\"\"],\"\")`)",
	"another_realm(`Int8Array`)",
	"another_realm(`Uint8Array`)",
	"another_realm(`Uint8ClampedArray`)",
	"another_realm(`Int16Array`)",
	"another_realm(`Uint16Array`)",
	"another_realm(`Int32Array`)",
	"another_realm(`Uint32Array`)",
	"another_realm(`Float32Array`)",
	"another_realm(`Float64Array`)",
	"another_realm(`BigInt64Array`)",
	"another_realm(`BigUint64Array`)",
	"another_realm(`ArrayBuffer`)",
	"another_realm(`SharedArrayBuffer`)",
	"another_realm(`Map`)",
	"another_realm(`Set`)",
	"another_realm(`WeakMap`)",
	"another_realm(`WeakSet`)",
	"another_realm(`Intl.ListFormat`)",
	"another_realm(`Intl.PluralRules`)",
	"another_realm(`Intl.RelativeTimeFormat`)",
	"another_realm(`Blob`)",
	"another_realm(`Object`)",
	"another_realm(`Function`)",
	"another_realm(`Boolean`)",
	"another_realm(`Number`)",
	"another_realm(`String`)",
	"another_realm(`Date`)",
	"another_realm(`Array`)",
	"another_realm(`Error`)",
	"another_realm(`EvalError`)",
	"another_realm(`RangeError`)",
	"another_realm(`ReferenceError`)",
	"another_realm(`SyntaxError`)",
	"another_realm(`TypeError`)",
	"another_realm(`URIError`)",
	"another_realm(`RegExp`)",
	"another_realm(`GeneratorFunction`)",
	"another_realm(`AsyncGeneratorFunction`)",
	"another_realm(`AsyncFunction`)",
	"another_realm(`Intl.Collator`)",
	"another_realm(`Intl.DateTimeFormat`)",
	"another_realm(`Intl.NumberFormat`)",
	"another_realm(`WebAssembly.CompileError`)",
	"another_realm(`WebAssembly.LinkError`)",
	"another_realm(`WebAssembly.RuntimeError`)",
	"another_realm(`new Int8Array()`)",
	"another_realm(`new Uint8Array()`)",
	"another_realm(`new Uint8ClampedArray()`)",
	"another_realm(`new Int16Array()`)",
	"another_realm(`new Uint16Array()`)",
	"another_realm(`new Int32Array()`)",
	"another_realm(`new Uint32Array()`)",
	"another_realm(`new Float32Array()`)",
	"another_realm(`new Float64Array()`)",
	"another_realm(`new BigInt64Array()`)",
	"another_realm(`new BigUint64Array()`)",
	"another_realm(`new ArrayBuffer()`)",
	"another_realm(`new SharedArrayBuffer()`)",
	"another_realm(`new Map()`)",
	"another_realm(`new Set()`)",
	"another_realm(`new WeakMap()`)",
	"another_realm(`new WeakSet()`)",
	"another_realm(`new Intl.ListFormat()`)",
	"another_realm(`new Intl.PluralRules()`)",
	"another_realm(`new Intl.RelativeTimeFormat()`)",
	"another_realm(`new Blob()`)",
	"another_realm(`new Object()`)",
	"another_realm(`new Function()`)",
	"another_realm(`new Boolean()`)",
	"another_realm(`new Number()`)",
	"another_realm(`new String()`)",
	"another_realm(`new Date()`)",
	"another_realm(`new Array()`)",
	"another_realm(`new Error()`)",
	"another_realm(`new EvalError()`)",
	"another_realm(`new RangeError()`)",
	"another_realm(`new ReferenceError()`)",
	"another_realm(`new SyntaxError()`)",
	"another_realm(`new TypeError()`)",
	"another_realm(`new URIError()`)",
	"another_realm(`new RegExp()`)",
	"another_realm(`new GeneratorFunction()`)",
	"another_realm(`new AsyncGeneratorFunction()`)",
	"another_realm(`new AsyncFunction()`)",
	"another_realm(`new Intl.Collator()`)",
	"another_realm(`new Intl.DateTimeFormat()`)",
	"another_realm(`new Intl.NumberFormat()`)",
	"another_realm(`new WebAssembly.CompileError()`)",
	"another_realm(`new WebAssembly.LinkError()`)",
	"another_realm(`new WebAssembly.RuntimeError()`)",
	"another_realm(`new Int8Array`)",
	"another_realm(`new Uint8Array`)",
	"another_realm(`new Uint8ClampedArray`)",
	"another_realm(`new Int16Array`)",
	"another_realm(`new Uint16Array`)",
	"another_realm(`new Int32Array`)",
	"another_realm(`new Uint32Array`)",
	"another_realm(`new Float32Array`)",
	"another_realm(`new Float64Array`)",
	"another_realm(`new BigInt64Array`)",
	"another_realm(`new BigUint64Array`)",
	"another_realm(`new ArrayBuffer`)",
	"another_realm(`new SharedArrayBuffer`)",
	"another_realm(`new Map`)",
	"another_realm(`new Set`)",
	"another_realm(`new WeakMap`)",
	"another_realm(`new WeakSet`)",
	"another_realm(`new Intl.ListFormat`)",
	"another_realm(`new Intl.PluralRules`)",
	"another_realm(`new Intl.RelativeTimeFormat`)",
	"another_realm(`new Blob`)",
	"another_realm(`new Object`)",
	"another_realm(`new Function`)",
	"another_realm(`new Boolean`)",
	"another_realm(`new Number`)",
	"another_realm(`new String`)",
	"another_realm(`new Date`)",
	"another_realm(`new Array`)",
	"another_realm(`new Error`)",
	"another_realm(`new EvalError`)",
	"another_realm(`new RangeError`)",
	"another_realm(`new ReferenceError`)",
	"another_realm(`new SyntaxError`)",
	"another_realm(`new TypeError`)",
	"another_realm(`new URIError`)",
	"another_realm(`new RegExp`)",
	"another_realm(`new GeneratorFunction`)",
	"another_realm(`new AsyncGeneratorFunction`)",
	"another_realm(`new AsyncFunction`)",
	"another_realm(`new Intl.Collator`)",
	"another_realm(`new Intl.DateTimeFormat`)",
	"another_realm(`new Intl.NumberFormat`)",
	"another_realm(`new WebAssembly.CompileError`)",
	"another_realm(`new WebAssembly.LinkError`)",
	"another_realm(`new WebAssembly.RuntimeError`)",
	"another_realm(`Object()`)",
	"another_realm(`Function()`)",
	"another_realm(`Boolean()`)",
	"another_realm(`Number()`)",
	"another_realm(`String()`)",
	"another_realm(`Date()`)",
	"another_realm(`Array()`)",
	"another_realm(`Error()`)",
	"another_realm(`EvalError()`)",
	"another_realm(`RangeError()`)",
	"another_realm(`ReferenceError()`)",
	"another_realm(`SyntaxError()`)",
	"another_realm(`TypeError()`)",
	"another_realm(`URIError()`)",
	"another_realm(`RegExp()`)",
	"another_realm(`GeneratorFunction()`)",
	"another_realm(`AsyncGeneratorFunction()`)",
	"another_realm(`AsyncFunction()`)",
	"another_realm(`Intl.Collator()`)",
	"another_realm(`Intl.DateTimeFormat()`)",
	"another_realm(`Intl.NumberFormat()`)",
	"another_realm(`WebAssembly.CompileError()`)",
	"another_realm(`WebAssembly.LinkError()`)",
	"another_realm(`WebAssembly.RuntimeError()`)",
	"another_realm(`class ObjectEx extends Object {}`)",
	"another_realm(`class FunctionEx extends Function {}`)",
	"another_realm(`class BooleanEx extends Boolean {}`)",
	"another_realm(`class NumberEx extends Number {}`)",
	"another_realm(`class StringEx extends String {}`)",
	"another_realm(`class DateEx extends Date {}`)",
	"another_realm(`class ArrayEx extends Array {}`)",
	"another_realm(`class ErrorEx extends Error {}`)",
	"another_realm(`class EvalErrorEx extends EvalError {}`)",
	"another_realm(`class RangeErrorEx extends RangeError {}`)",
	"another_realm(`class ReferenceErrorEx extends ReferenceError {}`)",
	"another_realm(`class SyntaxErrorEx extends SyntaxError {}`)",
	"another_realm(`class TypeErrorEx extends TypeError {}`)",
	"another_realm(`class URIErrorEx extends URIError {}`)",
	"another_realm(`class RegExpEx extends RegExp {}`)",
	"another_realm(`class GeneratorFunctionEx extends GeneratorFunction {}`)",
	"another_realm(`class AsyncGeneratorFunctionEx extends AsyncGeneratorFunction {}`)",
	"another_realm(`class AsyncFunctionEx extends AsyncFunction {}`)",
	"another_realm(`class Intl_CollatorEx extends Intl.Collator {}`)",
	"another_realm(`class Intl_DateTimeFormatEx extends Intl.DateTimeFormat {}`)",
	"another_realm(`class Intl_NumberFormatEx extends Intl.NumberFormat {}`)",
	"another_realm(`class WebAssembly_CompileErrorEx extends WebAssembly.CompileError {}`)",
	"another_realm(`class WebAssembly_LinkErrorEx extends WebAssembly.LinkError {}`)",
	"another_realm(`class WebAssembly_RuntimeErrorEx extends WebAssembly.RuntimeError {}`)",
	"another_realm(`class Int8ArrayEx extends Int8Array {}`)",
	"another_realm(`class Uint8ArrayEx extends Uint8Array {}`)",
	"another_realm(`class Uint8ClampedArrayEx extends Uint8ClampedArray {}`)",
	"another_realm(`class Int16ArrayEx extends Int16Array {}`)",
	"another_realm(`class Uint16ArrayEx extends Uint16Array {}`)",
	"another_realm(`class Int32ArrayEx extends Int32Array {}`)",
	"another_realm(`class Uint32ArrayEx extends Uint32Array {}`)",
	"another_realm(`class Float32ArrayEx extends Float32Array {}`)",
	"another_realm(`class Float64ArrayEx extends Float64Array {}`)",
	"another_realm(`class BigInt64ArrayEx extends BigInt64Array {}`)",
	"another_realm(`class BigUint64ArrayEx extends BigUint64Array {}`)",
	"another_realm(`class ArrayBufferEx extends ArrayBuffer {}`)",
	"another_realm(`class SharedArrayBufferEx extends SharedArrayBuffer {}`)",
	"another_realm(`class MapEx extends Map {}`)",
	"another_realm(`class SetEx extends Set {}`)",
	"another_realm(`class WeakMapEx extends WeakMap {}`)",
	"another_realm(`class WeakSetEx extends WeakSet {}`)",
	"another_realm(`class Intl_ListFormatEx extends Intl.ListFormat {}`)",
	"another_realm(`class Intl_PluralRulesEx extends Intl.PluralRules {}`)",
	"another_realm(`class Intl_RelativeTimeFormatEx extends Intl.RelativeTimeFormat {}`)",
	"another_realm(`class BlobEx extends Blob {}`)",
	"another_realm(`class extends Object {}`)",
	"another_realm(`class extends Function {}`)",
	"another_realm(`class extends Boolean {}`)",
	"another_realm(`class extends Number {}`)",
	"another_realm(`class extends String {}`)",
	"another_realm(`class extends Date {}`)",
	"another_realm(`class extends Array {}`)",
	"another_realm(`class extends Error {}`)",
	"another_realm(`class extends EvalError {}`)",
	"another_realm(`class extends RangeError {}`)",
	"another_realm(`class extends ReferenceError {}`)",
	"another_realm(`class extends SyntaxError {}`)",
	"another_realm(`class extends TypeError {}`)",
	"another_realm(`class extends URIError {}`)",
	"another_realm(`class extends RegExp {}`)",
	"another_realm(`class extends GeneratorFunction {}`)",
	"another_realm(`class extends AsyncGeneratorFunction {}`)",
	"another_realm(`class extends AsyncFunction {}`)",
	"another_realm(`class extends Intl.Collator {}`)",
	"another_realm(`class extends Intl.DateTimeFormat {}`)",
	"another_realm(`class extends Intl.NumberFormat {}`)",
	"another_realm(`class extends WebAssembly.CompileError {}`)",
	"another_realm(`class extends WebAssembly.LinkError {}`)",
	"another_realm(`class extends WebAssembly.RuntimeError {}`)",
	"another_realm(`class extends Int8Array {}`)",
	"another_realm(`class extends Uint8Array {}`)",
	"another_realm(`class extends Uint8ClampedArray {}`)",
	"another_realm(`class extends Int16Array {}`)",
	"another_realm(`class extends Uint16Array {}`)",
	"another_realm(`class extends Int32Array {}`)",
	"another_realm(`class extends Uint32Array {}`)",
	"another_realm(`class extends Float32Array {}`)",
	"another_realm(`class extends Float64Array {}`)",
	"another_realm(`class extends BigInt64Array {}`)",
	"another_realm(`class extends BigUint64Array {}`)",
	"another_realm(`class extends ArrayBuffer {}`)",
	"another_realm(`class extends SharedArrayBuffer {}`)",
	"another_realm(`class extends Map {}`)",
	"another_realm(`class extends Set {}`)",
	"another_realm(`class extends WeakMap {}`)",
	"another_realm(`class extends WeakSet {}`)",
	"another_realm(`class extends Intl.ListFormat {}`)",
	"another_realm(`class extends Intl.PluralRules {}`)",
	"another_realm(`class extends Intl.RelativeTimeFormat {}`)",
	"another_realm(`class extends Blob {}`)",
	"another_realm(`new (class ObjectEx extends Object {})()`)",
	"another_realm(`new (class FunctionEx extends Function {})()`)",
	"another_realm(`new (class BooleanEx extends Boolean {})()`)",
	"another_realm(`new (class NumberEx extends Number {})()`)",
	"another_realm(`new (class StringEx extends String {})()`)",
	"another_realm(`new (class DateEx extends Date {})()`)",
	"another_realm(`new (class ArrayEx extends Array {})()`)",
	"another_realm(`new (class ErrorEx extends Error {})()`)",
	"another_realm(`new (class EvalErrorEx extends EvalError {})()`)",
	"another_realm(`new (class RangeErrorEx extends RangeError {})()`)",
	"another_realm(`new (class ReferenceErrorEx extends ReferenceError {})()`)",
	"another_realm(`new (class SyntaxErrorEx extends SyntaxError {})()`)",
	"another_realm(`new (class TypeErrorEx extends TypeError {})()`)",
	"another_realm(`new (class URIErrorEx extends URIError {})()`)",
	"another_realm(`new (class RegExpEx extends RegExp {})()`)",
	"another_realm(`new (class GeneratorFunctionEx extends GeneratorFunction {})()`)",
	"another_realm(`new (class AsyncGeneratorFunctionEx extends AsyncGeneratorFunction {})()`)",
	"another_realm(`new (class AsyncFunctionEx extends AsyncFunction {})()`)",
	"another_realm(`new (class Intl_CollatorEx extends Intl.Collator {})()`)",
	"another_realm(`new (class Intl_DateTimeFormatEx extends Intl.DateTimeFormat {})()`)",
	"another_realm(`new (class Intl_NumberFormatEx extends Intl.NumberFormat {})()`)",
	"another_realm(`new (class WebAssembly_CompileErrorEx extends WebAssembly.CompileError {})()`)",
	"another_realm(`new (class WebAssembly_LinkErrorEx extends WebAssembly.LinkError {})()`)",
	"another_realm(`new (class WebAssembly_RuntimeErrorEx extends WebAssembly.RuntimeError {})()`)",
	"another_realm(`new (class Int8ArrayEx extends Int8Array {})()`)",
	"another_realm(`new (class Uint8ArrayEx extends Uint8Array {})()`)",
	"another_realm(`new (class Uint8ClampedArrayEx extends Uint8ClampedArray {})()`)",
	"another_realm(`new (class Int16ArrayEx extends Int16Array {})()`)",
	"another_realm(`new (class Uint16ArrayEx extends Uint16Array {})()`)",
	"another_realm(`new (class Int32ArrayEx extends Int32Array {})()`)",
	"another_realm(`new (class Uint32ArrayEx extends Uint32Array {})()`)",
	"another_realm(`new (class Float32ArrayEx extends Float32Array {})()`)",
	"another_realm(`new (class Float64ArrayEx extends Float64Array {})()`)",
	"another_realm(`new (class BigInt64ArrayEx extends BigInt64Array {})()`)",
	"another_realm(`new (class BigUint64ArrayEx extends BigUint64Array {})()`)",
	"another_realm(`new (class ArrayBufferEx extends ArrayBuffer {})()`)",
	"another_realm(`new (class SharedArrayBufferEx extends SharedArrayBuffer {})()`)",
	"another_realm(`new (class MapEx extends Map {})()`)",
	"another_realm(`new (class SetEx extends Set {})()`)",
	"another_realm(`new (class WeakMapEx extends WeakMap {})()`)",
	"another_realm(`new (class WeakSetEx extends WeakSet {})()`)",
	"another_realm(`new (class Intl_ListFormatEx extends Intl.ListFormat {})()`)",
	"another_realm(`new (class Intl_PluralRulesEx extends Intl.PluralRules {})()`)",
	"another_realm(`new (class Intl_RelativeTimeFormatEx extends Intl.RelativeTimeFormat {})()`)",
	"another_realm(`new (class BlobEx extends Blob {})()`)",
	"another_realm(`new (class extends Object {})()`)",
	"another_realm(`new (class extends Function {})()`)",
	"another_realm(`new (class extends Boolean {})()`)",
	"another_realm(`new (class extends Number {})()`)",
	"another_realm(`new (class extends String {})()`)",
	"another_realm(`new (class extends Date {})()`)",
	"another_realm(`new (class extends Array {})()`)",
	"another_realm(`new (class extends Error {})()`)",
	"another_realm(`new (class extends EvalError {})()`)",
	"another_realm(`new (class extends RangeError {})()`)",
	"another_realm(`new (class extends ReferenceError {})()`)",
	"another_realm(`new (class extends SyntaxError {})()`)",
	"another_realm(`new (class extends TypeError {})()`)",
	"another_realm(`new (class extends URIError {})()`)",
	"another_realm(`new (class extends RegExp {})()`)",
	"another_realm(`new (class extends GeneratorFunction {})()`)",
	"another_realm(`new (class extends AsyncGeneratorFunction {})()`)",
	"another_realm(`new (class extends AsyncFunction {})()`)",
	"another_realm(`new (class extends Intl.Collator {})()`)",
	"another_realm(`new (class extends Intl.DateTimeFormat {})()`)",
	"another_realm(`new (class extends Intl.NumberFormat {})()`)",
	"another_realm(`new (class extends WebAssembly.CompileError {})()`)",
	"another_realm(`new (class extends WebAssembly.LinkError {})()`)",
	"another_realm(`new (class extends WebAssembly.RuntimeError {})()`)",
	"another_realm(`new (class extends Int8Array {})()`)",
	"another_realm(`new (class extends Uint8Array {})()`)",
	"another_realm(`new (class extends Uint8ClampedArray {})()`)",
	"another_realm(`new (class extends Int16Array {})()`)",
	"another_realm(`new (class extends Uint16Array {})()`)",
	"another_realm(`new (class extends Int32Array {})()`)",
	"another_realm(`new (class extends Uint32Array {})()`)",
	"another_realm(`new (class extends Float32Array {})()`)",
	"another_realm(`new (class extends Float64Array {})()`)",
	"another_realm(`new (class extends BigInt64Array {})()`)",
	"another_realm(`new (class extends BigUint64Array {})()`)",
	"another_realm(`new (class extends ArrayBuffer {})()`)",
	"another_realm(`new (class extends SharedArrayBuffer {})()`)",
	"another_realm(`new (class extends Map {})()`)",
	"another_realm(`new (class extends Set {})()`)",
	"another_realm(`new (class extends WeakMap {})()`)",
	"another_realm(`new (class extends WeakSet {})()`)",
	"another_realm(`new (class extends Intl.ListFormat {})()`)",
	"another_realm(`new (class extends Intl.PluralRules {})()`)",
	"another_realm(`new (class extends Intl.RelativeTimeFormat {})()`)",
	"another_realm(`new (class extends Blob {})()`)",
	"another_realm(`class AggregateErrorEx extends AggregateError {}`)",
	"another_realm(`class DataViewEx extends DataView {}`)",
	"another_realm(`class WeakRefEx extends WeakRef {}`)",
	"another_realm(`class FinalizationRegistryEx extends FinalizationRegistry {}`)",
	"another_realm(`class PromiseEx extends Promise {}`)",
	"another_realm(`class Intl_LocaleEx extends Intl.Locale {}`)",
	"another_realm(`class Intl_DisplayNamesEx extends Intl.DisplayNames {}`)",
	"another_realm(`class WebAssembly_ModuleEx extends WebAssembly.Module {}`)",
	"another_realm(`class WebAssembly_InstanceEx extends WebAssembly.Instance {}`)",
	"another_realm(`class WebAssembly_MemoryEx extends WebAssembly.Memory {}`)",
	"another_realm(`class WebAssembly_TableEx extends WebAssembly.Table {}`)",
	"another_realm(`class FileEx extends File {}`)",
	"another_realm(`class extends AggregateError {}`)",
	"another_realm(`class extends DataView {}`)",
	"another_realm(`class extends WeakRef {}`)",
	"another_realm(`class extends FinalizationRegistry {}`)",
	"another_realm(`class extends Promise {}`)",
	"another_realm(`class extends Intl.Locale {}`)",
	"another_realm(`class extends Intl.DisplayNames {}`)",
	"another_realm(`class extends WebAssembly.Module {}`)",
	"another_realm(`class extends WebAssembly.Instance {}`)",
	"another_realm(`class extends WebAssembly.Memory {}`)",
	"another_realm(`class extends WebAssembly.Table {}`)",
	"another_realm(`class extends File {}`)",
	"another_realm(`new (class AggregateErrorEx extends AggregateError {})(\"\")`)",
	"another_realm(`new (class DataViewEx extends DataView {})(new ArrayBuffer())`)",
	"another_realm(`new (class WeakRefEx extends WeakRef {})({})`)",
	"another_realm(`new (class FinalizationRegistryEx extends FinalizationRegistry {})(()=>{})`)",
	"another_realm(`new (class PromiseEx extends Promise {})(() => {})`)",
	"another_realm(`new (class Intl_LocaleEx extends Intl.Locale {})(\"en-US\")`)",
	"another_realm(`new (class Intl_DisplayNamesEx extends Intl.DisplayNames {})([], {type: \"language\"})`)",
	"another_realm(`new (class WebAssembly_MemoryEx extends WebAssembly.Memory {})({initial:1, maximum:1})`)",
	"another_realm(`new (class WebAssembly_TableEx extends WebAssembly.Table {})({initial:1, element:\"anyfunc\"})`)",
	"another_realm(`new (class FileEx extends File {})([\"\"],\"\")`)",
	"another_realm(`new (class extends AggregateError {})(\"\")`)",
	"another_realm(`new (class extends DataView {})(new ArrayBuffer())`)",
	"another_realm(`new (class extends WeakRef {})({})`)",
	"another_realm(`new (class extends FinalizationRegistry {})(()=>{})`)",
	"another_realm(`new (class extends Promise {})(() => {})`)",
	"another_realm(`new (class extends Intl.Locale {})(\"en-US\")`)",
	"another_realm(`new (class extends Intl.DisplayNames {})([], {type: \"language\"})`)",
	"another_realm(`new (class extends WebAssembly.Memory {})({initial:1, maximum:1})`)",
	"another_realm(`new (class extends WebAssembly.Table {})({initial:1, element:\"anyfunc\"})`)",
	"another_realm(`new (class extends File {})([\"\"],\"\")`)",
	"another_realm(`Worker`)",
	"another_realm(`class WorkerEx extends Worker {}`)",
	"another_realm(`class extends Worker {}`)",
	"another_realm(`(() => { const v = new Worker(\"worker_value.js\"); v.terminate(); return v })()`)",
	"another_realm(`(() => { const v = new (class WorkerEx extends Worker {})(\"worker_value.js\"); v.terminate(); return v })()`)",
	"another_realm(`(() => { const v = new (class extends Worker {})(\"worker_value.js\"); v.terminate(); return v })()`)",
	"another_realm(`Symbol`)",
	"another_realm(`BigInt`)",
	"another_realm(`Generator`)",
	"another_realm(`AsyncGenerator`)",
	"another_realm(`new String(null)`)",
	"another_realm(`new String(undefined)`)",
	"another_realm(`new String(true)`)",
	"another_realm(`new String(false)`)",
	"another_realm(`new String(\"\")`)",
	"another_realm(`new String(\"0\")`)",
	"another_realm(`new String(\"1\")`)",
	"another_realm(`new String(\"str\")`)",
	"another_realm(`new String(\"NaN\")`)",
	"another_realm(`new String(\"   \")`)",
	"another_realm(`new String([])`)",
	"another_realm(`new String([0])`)",
	"another_realm(`new String([1])`)",
	"another_realm(`new String(new Array(2))`)",
	"another_realm(`new String(/a/)`)",
	"another_realm(`String(null)`)",
	"another_realm(`String(undefined)`)",
	"another_realm(`String(true)`)",
	"another_realm(`String(false)`)",
	"another_realm(`String(\"\")`)",
	"another_realm(`String(\"0\")`)",
	"another_realm(`String(\"1\")`)",
	"another_realm(`String(\"str\")`)",
	"another_realm(`String(\"NaN\")`)",
	"another_realm(`String(\"   \")`)",
	"another_realm(`String([])`)",
	"another_realm(`String([0])`)",
	"another_realm(`String([1])`)",
	"another_realm(`String(new Array(2))`)",
	"another_realm(`String(/a/)`)",
	"another_realm(`new Set([1])`)",
	"another_realm(`new Map([[1,1]])`)",
	"another_realm(`new Float32Array(1)`)",
	"another_realm(`new Date(NaN)`)",
	"another_realm(`Error(\"\")`)",
	"another_realm(`Error(\"str\")`)",
	"another_realm(`new Error(\"\")`)",
	"another_realm(`new Error(\"str\")`)",
	"another_realm(`RegExp(\"\")`)",
	"another_realm(`RegExp(\"a\")`)",
	"another_realm(`RegExp(/a/)`)",
	"another_realm(`new class {}`)",
	"another_realm(`new class { fn() {} }`)",
	"another_realm(`new class A {}`)",
	"another_realm(`new class A { fn() {} }`)",
	"another_realm(`new class B extends (class A { fn() {} }) { fn() {} }`)",
	"another_realm(`{}`)",
	"another_realm(`{a:1}`)",
	"another_realm(`Object.create(null)`)",
	"another_realm(`Object.create(Object.prototype)`)",
	"another_realm(`Object.create({})`)",
	"another_realm(`Object.create(Object.create(Object.create({})))`)",
	"another_realm(`Object.create(Object.create(Object.create([])))`)",
	"another_realm(`{ length: 1.1 }`)",
	"another_realm(`{ length: NaN }`)",
	"another_realm(`{ length: 1 }`)",
	"another_realm(`{ a: 1, length: 1 }`)",
	"another_realm(`{ 1: 1, length: 1 }`)",
	"another_realm(`{ 1: 1, 2: 2, length: 1 }`)",
	"another_realm(`{ toString: function() { return \"str\" } }`)",
	"another_realm(`{ toString: function() { return \"NaN\" } }`)",
	"another_realm(`{ call: function() { return 1 } }`)",
	"another_realm(`{ get [Symbol.toStringTag]() { return \"Array\" } }`)",
	"another_realm(`(() => { const v = []; Object.defineProperty(v, Symbol.toStringTag, { get: () => { return \"ha-ha\"} }); return v })()`)",
	"another_realm(`(function* gen() { yield 1 })()`)",
	"another_realm(`(async function* a_gen() { yield 1 })()`)",
	"another_realm(`{ *[Symbol.iterator]() { yield 1 } }`)",
	"another_realm(`{ async* [Symbol.asyncIterator]() { yield 1 } }`)",
	"another_realm(`{ then: () => {} }`)",
	"another_realm(`{ [Symbol.iterator]: function*() { yield 0 }, valueOf: () => 0 }`)",
	"another_realm(`{ size: 0 }`)",
	"another_realm(`window`)",
	"another_realm(`document`)",
	"another_realm(`document.createElement(\"div\")`)",
	"another_realm(`document.createElement(\"custom_tag\")`)",
	"another_realm(`document.createTextNode(\"str\")`)",
	"another_realm(`document.createTextNode(\"\")`)",
	"another_realm(`document.querySelectorAll(\"div\")`)",
	"another_realm(`HTMLElement`)",
	"another_realm(`window.alert`)",
	"another_realm(`setTimeout`)",
	"another_realm(`window.confirm`)",
	"another_realm(`window.prompt`)",
	"another_realm(`document.forms`)",
	"another_realm(`Object(NaN)`)",
	"another_realm(`Object(null)`)",
	"another_realm(`Object(undefined)`)",
	"another_realm(`Object(true)`)",
	"another_realm(`Object(false)`)",
	"another_realm(`Object(\"\")`)",
	"another_realm(`Object(\"0\")`)",
	"another_realm(`Object(\"1\")`)",
	"another_realm(`Object(\"str\")`)",
	"another_realm(`Object(\"NaN\")`)",
	"another_realm(`Object(\"   \")`)",
	"another_realm(`Object(Symbol())`)",
	"another_realm(`Object(Symbol(\"\"))`)",
	"another_realm(`Object(Symbol(\"str\"))`)",
	"another_realm(`Object(Symbol.for(\"symbol\"))`)",
	"another_realm(`Object(Symbol.iterator)`)",
	"another_realm(`Object(-Infinity)`)",
	"another_realm(`Object(-Number.MAX_VALUE-1)`)",
	"another_realm(`Object(-Number.MAX_VALUE)`)",
	"another_realm(`Object(-Number.MAX_VALUE+1)`)",
	"another_realm(`Object(Number.MIN_SAFE_INTEGER-1)`)",
	"another_realm(`Object(Number.MIN_SAFE_INTEGER)`)",
	"another_realm(`Object(Number.MIN_SAFE_INTEGER+1)`)",
	"another_realm(`Object(-1)`)",
	"another_realm(`Object(-0.1)`)",
	"another_realm(`Object(-Number.EPSILON)`)",
	"another_realm(`Object(-Number.MIN_VALUE)`)",
	"another_realm(`Object(-0)`)",
	"another_realm(`Object(0)`)",
	"another_realm(`Object(+0)`)",
	"another_realm(`Object(+Number.MIN_VALUE)`)",
	"another_realm(`Object(+Number.EPSILON)`)",
	"another_realm(`Object(+0.1)`)",
	"another_realm(`Object(+1)`)",
	"another_realm(`Object(+1.0)`)",
	"another_realm(`Object(1)`)",
	"another_realm(`Object(Number.MAX_SAFE_INTEGER-1)`)",
	"another_realm(`Object(+Number.MAX_SAFE_INTEGER)`)",
	"another_realm(`Object(Number.MAX_SAFE_INTEGER+1)`)",
	"another_realm(`Object(Number.MAX_VALUE-1)`)",
	"another_realm(`Object(+Number.MAX_VALUE)`)",
	"another_realm(`Object(Number.MAX_VALUE+1)`)",
	"another_realm(`Object(+Infinity)`)",
	"another_realm(`Object(BigInt(-Number.MAX_VALUE-1))`)",
	"another_realm(`Object(BigInt(-Number.MAX_VALUE))`)",
	"another_realm(`Object(BigInt(-Number.MAX_VALUE+1))`)",
	"another_realm(`Object(BigInt(Number.MIN_SAFE_INTEGER-1))`)",
	"another_realm(`Object(BigInt(Number.MIN_SAFE_INTEGER))`)",
	"another_realm(`Object(BigInt(Number.MIN_SAFE_INTEGER+1))`)",
	"another_realm(`Object(BigInt(-1))`)",
	"another_realm(`Object(BigInt(-0))`)",
	"another_realm(`Object(BigInt(0))`)",
	"another_realm(`Object(BigInt(+0))`)",
	"another_realm(`Object(BigInt(+1))`)",
	"another_realm(`Object(BigInt(+1.0))`)",
	"another_realm(`Object(BigInt(1))`)",
	"another_realm(`Object(BigInt(Number.MAX_SAFE_INTEGER-1))`)",
	"another_realm(`Object(BigInt(+Number.MAX_SAFE_INTEGER))`)",
	"another_realm(`Object(BigInt(Number.MAX_SAFE_INTEGER+1))`)",
	"another_realm(`Object(BigInt(Number.MAX_VALUE-1))`)",
	"another_realm(`Object(BigInt(+Number.MAX_VALUE))`)",
	"another_realm(`Object(BigInt(Number.MAX_VALUE+1))`)",
	"another_realm(`Object(-1n)`)",
	"another_realm(`Object(-0n)`)",
	"another_realm(`Object(0n)`)",
	"another_realm(`Object(1n)`)",
	"another_realm(`Object(Boolean())`)",
	"another_realm(`Object(Number())`)",
	"another_realm(`Object(String())`)",
	"another_realm(`Object(Date())`)",
	"another_realm(`Object(String(null))`)",
	"another_realm(`Object(String(undefined))`)",
	"another_realm(`Object(String(true))`)",
	"another_realm(`Object(String(false))`)",
	"another_realm(`Object(String(\"\"))`)",
	"another_realm(`Object(String(\"0\"))`)",
	"another_realm(`Object(String(\"1\"))`)",
	"another_realm(`Object(String(\"str\"))`)",
	"another_realm(`Object(String(\"NaN\"))`)",
	"another_realm(`Object(String(\"   \"))`)",
	"another_realm(`Object(String([]))`)",
	"another_realm(`Object(String([0]))`)",
	"another_realm(`Object(String([1]))`)",
	"another_realm(`Object(String(new Array(2)))`)",
	"another_realm(`Object(String(/a/))`)",
	"another_realm(`Object.freeze(Object(NaN))`)",
	"another_realm(`Object.seal({a:1})`)",
	"another_realm(`Object.freeze({a:1})`)",
	"another_realm(`Object.preventExtensions({a:1})`)"
]