export const boxed_number_disabled_values = []
export const boxed_number_values = [
	"new Number()",
	"new Number",
	"Object(-0)",
	"Object(0)",
	"Object(+0)",
	"Object(Number())",
	"Object(+Number.MIN_VALUE)",
	"Object(+Number.EPSILON)",
	"Object(+0.1)",
	"Object(+1)",
	"Object(+1.0)",
	"Object(1)",
	"Object(Number.MAX_SAFE_INTEGER-1)",
	"Object(+Number.MAX_SAFE_INTEGER)",
	"Object(+Infinity)",
	"Object(Number.MAX_SAFE_INTEGER+1)",
	"Object(Number.MAX_VALUE-1)",
	"Object(+Number.MAX_VALUE)",
	"Object(Number.MAX_VALUE+1)",
	"Object(-0.1)",
	"Object(-Number.EPSILON)",
	"Object(-Number.MIN_VALUE)",
	"Object(Number.MIN_SAFE_INTEGER)",
	"Object(Number.MIN_SAFE_INTEGER+1)",
	"Object(-1)",
	"Object(-Infinity)",
	"Object(-Number.MAX_VALUE-1)",
	"Object(-Number.MAX_VALUE)",
	"Object(-Number.MAX_VALUE+1)",
	"Object(Number.MIN_SAFE_INTEGER-1)",
	"Object(NaN)",
	"Object.freeze(Object(NaN))",
	"another_realm(`new Number()`)",
	"another_realm(`new Number`)",
	"another_realm(`Object(-0)`)",
	"another_realm(`Object(0)`)",
	"another_realm(`Object(+0)`)",
	"another_realm(`Object(Number())`)",
	"another_realm(`Object(+Number.MIN_VALUE)`)",
	"another_realm(`Object(+Number.EPSILON)`)",
	"another_realm(`Object(+0.1)`)",
	"another_realm(`Object(+1)`)",
	"another_realm(`Object(+1.0)`)",
	"another_realm(`Object(1)`)",
	"another_realm(`Object(Number.MAX_SAFE_INTEGER-1)`)",
	"another_realm(`Object(+Number.MAX_SAFE_INTEGER)`)",
	"another_realm(`Object(+Infinity)`)",
	"another_realm(`Object(Number.MAX_SAFE_INTEGER+1)`)",
	"another_realm(`Object(Number.MAX_VALUE-1)`)",
	"another_realm(`Object(+Number.MAX_VALUE)`)",
	"another_realm(`Object(Number.MAX_VALUE+1)`)",
	"another_realm(`Object(-0.1)`)",
	"another_realm(`Object(-Number.EPSILON)`)",
	"another_realm(`Object(-Number.MIN_VALUE)`)",
	"another_realm(`Object(Number.MIN_SAFE_INTEGER)`)",
	"another_realm(`Object(Number.MIN_SAFE_INTEGER+1)`)",
	"another_realm(`Object(-1)`)",
	"another_realm(`Object(-Infinity)`)",
	"another_realm(`Object(-Number.MAX_VALUE-1)`)",
	"another_realm(`Object(-Number.MAX_VALUE)`)",
	"another_realm(`Object(-Number.MAX_VALUE+1)`)",
	"another_realm(`Object(Number.MIN_SAFE_INTEGER-1)`)",
	"another_realm(`Object(NaN)`)",
	"another_realm(`Object.freeze(Object(NaN))`)",
	"another_realm(`new (class NumberEx extends Number {})()`)",
	"another_realm(`new (class extends Number {})()`)",
	"new (class NumberEx extends Number {})()",
	"new (class extends Number {})()"
]