export const pure_primitive_disabled_values = []
export const pure_primitive_values = [
	"\"   \"",
	"String(\"   \")",
	"another_realm(`\"   \"`)",
	"another_realm(`String(\"   \")`)",
	"\"\"",
	"String()",
	"String(\"\")",
	"String([])",
	"another_realm(`\"\"`)",
	"another_realm(`String()`)",
	"another_realm(`String(\"\")`)",
	"another_realm(`String([])`)",
	"\"0\"",
	"String(\"0\")",
	"String([0])",
	"another_realm(`\"0\"`)",
	"another_realm(`String(\"0\")`)",
	"another_realm(`String([0])`)",
	"\"1\"",
	"String(\"1\")",
	"String([1])",
	"another_realm(`\"1\"`)",
	"another_realm(`String(\"1\")`)",
	"another_realm(`String([1])`)",
	"\"str\"",
	"\"NaN\"",
	"Date()",
	"String(null)",
	"String(undefined)",
	"String(true)",
	"String(false)",
	"String(\"str\")",
	"String(\"NaN\")",
	"String(new Array(2))",
	"String(/a/)",
	"another_realm(`\"str\"`)",
	"another_realm(`\"NaN\"`)",
	"another_realm(`Date()`)",
	"another_realm(`String(null)`)",
	"another_realm(`String(undefined)`)",
	"another_realm(`String(true)`)",
	"another_realm(`String(false)`)",
	"another_realm(`String(\"str\")`)",
	"another_realm(`String(\"NaN\")`)",
	"another_realm(`String(new Array(2))`)",
	"another_realm(`String(/a/)`)",
	"0",
	"+0",
	"Number()",
	"another_realm(`0`)",
	"another_realm(`+0`)",
	"another_realm(`Number()`)",
	"+Number.MIN_VALUE",
	"+Number.EPSILON",
	"+0.1",
	"another_realm(`+Number.MIN_VALUE`)",
	"another_realm(`+Number.EPSILON`)",
	"another_realm(`+0.1`)",
	"+1",
	"+1.0",
	"1",
	"Number.MAX_SAFE_INTEGER-1",
	"+Number.MAX_SAFE_INTEGER",
	"another_realm(`+1`)",
	"another_realm(`+1.0`)",
	"another_realm(`1`)",
	"another_realm(`Number.MAX_SAFE_INTEGER-1`)",
	"another_realm(`+Number.MAX_SAFE_INTEGER`)",
	"+Infinity",
	"another_realm(`+Infinity`)",
	"Number.MAX_SAFE_INTEGER+1",
	"Number.MAX_VALUE-1",
	"+Number.MAX_VALUE",
	"Number.MAX_VALUE+1",
	"another_realm(`Number.MAX_SAFE_INTEGER+1`)",
	"another_realm(`Number.MAX_VALUE-1`)",
	"another_realm(`+Number.MAX_VALUE`)",
	"another_realm(`Number.MAX_VALUE+1`)",
	"-0",
	"another_realm(`-0`)",
	"-0.1",
	"-Number.EPSILON",
	"-Number.MIN_VALUE",
	"another_realm(`-0.1`)",
	"another_realm(`-Number.EPSILON`)",
	"another_realm(`-Number.MIN_VALUE`)",
	"BigInt(-0)",
	"BigInt(0)",
	"BigInt(+0)",
	"-0n",
	"0n",
	"another_realm(`BigInt(-0)`)",
	"another_realm(`BigInt(0)`)",
	"another_realm(`BigInt(+0)`)",
	"another_realm(`-0n`)",
	"another_realm(`0n`)",
	"Number.MIN_SAFE_INTEGER",
	"Number.MIN_SAFE_INTEGER+1",
	"-1",
	"another_realm(`Number.MIN_SAFE_INTEGER`)",
	"another_realm(`Number.MIN_SAFE_INTEGER+1`)",
	"another_realm(`-1`)",
	"BigInt(-Number.MAX_VALUE-1)",
	"BigInt(-Number.MAX_VALUE)",
	"BigInt(-Number.MAX_VALUE+1)",
	"BigInt(Number.MIN_SAFE_INTEGER-1)",
	"BigInt(Number.MIN_SAFE_INTEGER)",
	"BigInt(Number.MIN_SAFE_INTEGER+1)",
	"BigInt(-1)",
	"-1n",
	"another_realm(`BigInt(-Number.MAX_VALUE-1)`)",
	"another_realm(`BigInt(-Number.MAX_VALUE)`)",
	"another_realm(`BigInt(-Number.MAX_VALUE+1)`)",
	"another_realm(`BigInt(Number.MIN_SAFE_INTEGER-1)`)",
	"another_realm(`BigInt(Number.MIN_SAFE_INTEGER)`)",
	"another_realm(`BigInt(Number.MIN_SAFE_INTEGER+1)`)",
	"another_realm(`BigInt(-1)`)",
	"another_realm(`-1n`)",
	"-Infinity",
	"another_realm(`-Infinity`)",
	"-Number.MAX_VALUE-1",
	"-Number.MAX_VALUE",
	"-Number.MAX_VALUE+1",
	"Number.MIN_SAFE_INTEGER-1",
	"another_realm(`-Number.MAX_VALUE-1`)",
	"another_realm(`-Number.MAX_VALUE`)",
	"another_realm(`-Number.MAX_VALUE+1`)",
	"another_realm(`Number.MIN_SAFE_INTEGER-1`)",
	"BigInt(+1)",
	"BigInt(+1.0)",
	"BigInt(1)",
	"BigInt(Number.MAX_SAFE_INTEGER-1)",
	"BigInt(+Number.MAX_SAFE_INTEGER)",
	"1n",
	"another_realm(`BigInt(+1)`)",
	"another_realm(`BigInt(+1.0)`)",
	"another_realm(`BigInt(1)`)",
	"another_realm(`BigInt(Number.MAX_SAFE_INTEGER-1)`)",
	"another_realm(`BigInt(+Number.MAX_SAFE_INTEGER)`)",
	"another_realm(`1n`)",
	"BigInt(Number.MAX_SAFE_INTEGER+1)",
	"BigInt(Number.MAX_VALUE-1)",
	"BigInt(+Number.MAX_VALUE)",
	"BigInt(Number.MAX_VALUE+1)",
	"another_realm(`BigInt(Number.MAX_SAFE_INTEGER+1)`)",
	"another_realm(`BigInt(Number.MAX_VALUE-1)`)",
	"another_realm(`BigInt(+Number.MAX_VALUE)`)",
	"another_realm(`BigInt(Number.MAX_VALUE+1)`)",
	"false",
	"Boolean()",
	"another_realm(`false`)",
	"another_realm(`Boolean()`)",
	"NaN",
	"another_realm(`NaN`)",
	"Symbol()",
	"Symbol(\"\")",
	"another_realm(`Symbol()`)",
	"another_realm(`Symbol(\"\")`)",
	"Symbol(\"str\")",
	"Symbol.iterator",
	"another_realm(`Symbol(\"str\")`)",
	"another_realm(`Symbol.iterator`)",
	"Symbol.for(\"symbol\")",
	"another_realm(`Symbol.for(\"symbol\")`)",
	"null",
	"another_realm(`null`)",
	"true",
	"another_realm(`true`)",
	"undefined"
]